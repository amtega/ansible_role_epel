---
# Tasks for testing role

- name: Run idempotence test
  hosts: localhost
  roles:
    - role: amtega.docker_presets
      docker_presets_images_json_query: >-
        [? starts_with(name, `centos-6`)
           || starts_with(name, `centos-7`) ]

    - role: amtega.docker_sandbox
      docker_sandbox_state: started
  tags:
    - sandbox

- name: Test epel repository install and enable
  hosts: docker_sandbox_containers
  roles:
    - amtega.epel
  vars:
    epel_state: present

    epel_enabled: 1
    epel_debuginfo_enabled: 1
    epel_source_enabled: 1

    epel_testing_enabled: 1
    epel_testing_debuginfo_enabled: 1
    epel_testing_source_enabled: 1
  tasks:
    - name: Check epel repository config file
      stat:
        path: "{{ epel_config_file }}"
      register: check_epel_config_file_result

    - name: Check epel testing repository config file
      stat:
        path: "{{ epel_testing_config_file }}"
      register: check_epel_testing_config_file_result

    - name: Check epel config files exist
      assert:
        that:
          - check_epel_config_file_result.stat.exists
          - check_epel_testing_config_file_result.stat.exists

    - name: Check that all epel repositories are enabled
      command: >-
        grep 'enabled=0'
        {{ epel_config_file }}
        {{ epel_testing_config_file }}
      register: check_enabled_options
      failed_when: >-
        check_enabled_options.rc != 1
        or check_enabled_options.stdout | length > 0
      changed_when: false
  tags:
    - idempotence

- name: Test epel repository install and disable
  hosts: docker_sandbox_containers
  roles:
    - amtega.epel
  vars:
    epel_state: present

    epel_enabled: 0
    epel_debuginfo_enabled: 0
    epel_source_enabled: 0

    epel_testing_enabled: 0
    epel_testing_debuginfo_enabled: 0
    epel_testing_source_enabled: 0
  tasks:
    - name: Check that all epel repositories are disabled
      command: >-
        grep 'enabled=1'
        {{ epel_config_file }}
        {{ epel_testing_config_file }}
      register: check_enabled_options
      failed_when: >-
        check_enabled_options.rc != 1
        or check_enabled_options.stdout | length > 0
      changed_when: false

- name: Test epel repository force install and enable
  hosts: docker_sandbox_containers
  roles:
    - amtega.epel
  vars:
    epel_state: force

    epel_enabled: 1
    epel_debuginfo_enabled: 1
    epel_source_enabled: 1

    epel_testing_enabled: 1
    epel_testing_debuginfo_enabled: 1
    epel_testing_source_enabled: 1
  tasks:
    - name: Check epel repository config file
      stat:
        path: "{{ epel_config_file }}"
      register: check_epel_config_file_result

    - name: Check epel testing repository config file
      stat:
        path: "{{ epel_testing_config_file }}"
      register: check_epel_testing_config_file_result

    - name: Check epel config files exist
      assert:
        that:
          - check_epel_config_file_result.stat.exists
          - check_epel_testing_config_file_result.stat.exists

    - name: Check that all epel repositories are enabled
      command: >-
        grep 'enabled=0'
        {{ epel_config_file }}
        {{ epel_testing_config_file }}
      register: check_enabled_options
      failed_when: >-
        check_enabled_options.rc != 1
        or check_enabled_options.stdout | length > 0
      changed_when: false

- name: Test epel repository removal
  hosts: docker_sandbox_containers
  roles:
    - amtega.epel
  vars:
    epel_state: absent
  tasks:
    - name: Check epel repository config file
      stat:
        path: "{{ epel_config_file }}"
      register: check_epel_config_file_result

    - name: Check epel testing repository config file
      stat:
        path: "{{ epel_testing_config_file }}"
      register: check_epel_testing_config_file_result

    - name: Check epel config files exist
      assert:
        that:
          - not check_epel_config_file_result.stat.exists
          - not check_epel_testing_config_file_result.stat.exists

    - name: Check that all epel packages were removed
      shell: >-
        yum list installed epel* | grep epel
      args:
        warn: false
      register: check_packages
      failed_when: check_packages.stdout | length > 0
      changed_when: false

- name: Cleanup docker docker sandbox
  hosts: localhost
  roles:
    - role: amtega.docker_sandbox
      docker_sandbox_state: absent
  tags:
    - cleanup
    - sandbox
